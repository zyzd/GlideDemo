apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    defaultConfig {
        applicationId "com.zyzd.glidedemo"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        renderscriptTargetApi 23
        renderscriptSupportModeEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
//想要使用 GPU 转换时添加
repositories {
    jcenter()
    mavenCentral()
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile 'com.android.support:design:24.2.0'
    //Glide 转换设置
    //compile 'jp.wasabeef:glide-transformations:1.2.1'
    //想要使用 GPU 转换时添加
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.3.0'

    //Glide会根据你使用的网络库自动采用，无需其他配置，但是如果你把这两个库都在你的 build.gradle 中声明了，
    // 那这两个库都会被添加。因为 Glide 没有任何特殊的加载顺序，你将会有一个不稳定的状态，
    // 它并不明确使用哪个网络库，所以确保你只添加了一个集成库。
    // Glide's OkHttp Integration
    compile 'com.github.bumptech.glide:okhttp-integration:1.3.1@aar'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    // Glide's Volley Integration
    //compile 'com.github.bumptech.glide:volley-integration:1.3.1@aar'
   // compile 'com.mcxiaoke.volley:library:1.0.8'
}
